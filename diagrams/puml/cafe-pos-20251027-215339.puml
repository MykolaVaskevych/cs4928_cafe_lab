@startuml

interface com.cafepos.catalog.Catalog {
	{method}  {abstract} +add ( paramProduct1 : com.cafepos.catalog.Product ) : void
	{method}  {abstract} +findById ( paramString1 : String ) : java.util.Optional
}


class com.cafepos.catalog.InMemoryCatalog {
	{method} +add ( paramProduct1 : com.cafepos.catalog.Product ) : void
	{method} +findById ( paramString1 : String ) : java.util.Optional
}


interface com.cafepos.catalog.Priced {
	{method}  {abstract} +price () : com.cafepos.common.Money
}


interface com.cafepos.catalog.Product {
	{method}  {abstract} +basePrice () : com.cafepos.common.Money
	{method}  {abstract} +id () : String
	{method}  {abstract} +name () : String
}


class com.cafepos.catalog.SimpleProduct {
	{field} -id : String
	{field} -name : String
	{method} +basePrice () : com.cafepos.common.Money
	{method} +id () : String
	{method} +name () : String
	{method} +price () : com.cafepos.common.Money
}


class com.cafepos.checkout.CheckoutService {
	{field} -taxPercent : int
	{method} +checkout ( paramString1 : String , paramint2 : int ) : String
}


class com.cafepos.common.Money {
	{field} -amount : java.math.BigDecimal
	{method} +add ( paramMoney1 : com.cafepos.common.Money ) : com.cafepos.common.Money
	{method} +asBigDecimal () : java.math.BigDecimal
	{method} +compareTo ( paramMoney1 : com.cafepos.common.Money ) : int
	{method} +equals ( paramObject1 : Object ) : boolean
	{method} +hashCode () : int
	{method} +multiply ( paramint1 : int ) : com.cafepos.common.Money
	{method}  {static} +of ( paramdouble1 : double ) : com.cafepos.common.Money
	{method}  {static} +of ( paramBigDecimal1 : java.math.BigDecimal ) : com.cafepos.common.Money
	{method} +subtract ( paramMoney1 : com.cafepos.common.Money ) : com.cafepos.common.Money
	{method} +toString () : String
	{method}  {static} +zero () : com.cafepos.common.Money
}


class com.cafepos.decorator.ExtraShot {
	{method} +name () : String
	{method} +price () : com.cafepos.common.Money
}


class com.cafepos.decorator.OatMilk {
	{method} +name () : String
	{method} +price () : com.cafepos.common.Money
}


abstract class com.cafepos.decorator.ProductDecorator {
	{method} +basePrice () : com.cafepos.common.Money
	{method} +id () : String
}


class com.cafepos.decorator.SizeLarge {
	{method} +name () : String
	{method} +price () : com.cafepos.common.Money
}


class com.cafepos.decorator.Syrup {
	{method} +name () : String
	{method} +price () : com.cafepos.common.Money
}


class com.cafepos.demo.InteractiveCLI {
	{field} {static} -scanner : java.util.Scanner
	{method}  {static} -addItemToOrder ( paramOrder1 : com.cafepos.domain.Order ) : boolean
	{method}  {static} -getIntInput () : int
	{method}  {static} +main ( paramString;1 : [Ljava.lang.String; ) : void
	{method}  {static} -processCashPayment ( paramMoney1 : com.cafepos.common.Money ) : boolean
	{method}  {static} -processPayment ( paramOrder1 : com.cafepos.domain.Order ) : boolean
	{method}  {static} -selectDiscountPolicy () : com.cafepos.pricing.DiscountPolicy
	{method}  {static} -viewOrder ( paramOrder1 : com.cafepos.domain.Order ) : void
}


class com.cafepos.demo.Week2Demo {
	{method}  {static} +main ( paramString;1 : [Ljava.lang.String; ) : void
}


class com.cafepos.demo.Week3Demo {
	{method}  {static} +main ( paramString;1 : [Ljava.lang.String; ) : void
}


class com.cafepos.demo.Week4Demo {
	{method}  {static} +main ( paramString;1 : [Ljava.lang.String; ) : void
}


class com.cafepos.demo.Week5Demo {
	{method}  {static} +main ( paramString;1 : [Ljava.lang.String; ) : void
}


class com.cafepos.demo.Week6Demo {
	{method}  {static} +main ( paramString;1 : [Ljava.lang.String; ) : void
}


class com.cafepos.domain.LineItem {
	{field} -quantity : int
	{method} +lineTotal () : com.cafepos.common.Money
	{method} +product () : com.cafepos.catalog.Product
	{method} +quantity () : int
}


class com.cafepos.domain.Order {
	{field} -id : long
	{method} +addItem ( paramLineItem1 : com.cafepos.domain.LineItem ) : void
	{method} +id () : long
	{method} +items () : java.util.List
	{method} +markReady () : void
	{method} -notifyObservers ( paramString1 : String ) : void
	{method} +pay ( paramPaymentStrategy1 : com.cafepos.payment.PaymentStrategy ) : void
	{method} +register ( paramOrderObserver1 : com.cafepos.observer.OrderObserver ) : void
	{method} +subtotal () : com.cafepos.common.Money
	{method} +taxAtPercent ( paramint1 : int ) : com.cafepos.common.Money
	{method} +totalWithTax ( paramint1 : int ) : com.cafepos.common.Money
	{method} +unregister ( paramOrderObserver1 : com.cafepos.observer.OrderObserver ) : void
}


class com.cafepos.domain.OrderIds {
	{field} {static} -counter : java.util.concurrent.atomic.AtomicLong
	{method}  {static} +next () : long
}


class com.cafepos.factory.ProductFactory {
	{method} +create ( paramString1 : String ) : com.cafepos.catalog.Product
}


class com.cafepos.observer.CustomerNotifier {
	{method} +updated ( paramOrder1 : com.cafepos.domain.Order , paramString2 : String ) : void
}


class com.cafepos.observer.DeliveryDesk {
	{method} +updated ( paramOrder1 : com.cafepos.domain.Order , paramString2 : String ) : void
}


class com.cafepos.observer.KitchenDisplay {
	{method} +updated ( paramOrder1 : com.cafepos.domain.Order , paramString2 : String ) : void
}


interface com.cafepos.observer.OrderObserver {
	{method}  {abstract} +updated ( paramOrder1 : com.cafepos.domain.Order , paramString2 : String ) : void
}


interface com.cafepos.observer.OrderPublisher {
	{method}  {abstract} +notifyObservers ( paramOrder1 : com.cafepos.domain.Order , paramString2 : String ) : void
	{method}  {abstract} +register ( paramOrderObserver1 : com.cafepos.observer.OrderObserver ) : void
	{method}  {abstract} +unregister ( paramOrderObserver1 : com.cafepos.observer.OrderObserver ) : void
}


class com.cafepos.payment.CardPayment {
	{field} -cardNumber : String
	{method} -maskCardNumber ( paramString1 : String ) : String
	{method} +pay ( paramOrder1 : com.cafepos.domain.Order ) : void
}


class com.cafepos.payment.CashPayment {
	{method} +pay ( paramOrder1 : com.cafepos.domain.Order ) : void
}


interface com.cafepos.payment.PaymentStrategy {
	{method}  {abstract} +pay ( paramOrder1 : com.cafepos.domain.Order ) : void
}


class com.cafepos.payment.WalletPayment {
	{field} -walletId : String
	{method} +pay ( paramOrder1 : com.cafepos.domain.Order ) : void
}


interface com.cafepos.pricing.DiscountPolicy {
	{method}  {abstract} +discountOf ( paramMoney1 : com.cafepos.common.Money ) : com.cafepos.common.Money
}


class com.cafepos.pricing.FixedCouponDiscount {
	{method} +discountOf ( paramMoney1 : com.cafepos.common.Money ) : com.cafepos.common.Money
}


class com.cafepos.pricing.FixedRateTaxPolicy {
	{field} -percent : int
	{method} +taxOn ( paramMoney1 : com.cafepos.common.Money ) : com.cafepos.common.Money
}


class com.cafepos.pricing.LoyaltyPercentDiscount {
	{field} -percent : int
	{method} +discountOf ( paramMoney1 : com.cafepos.common.Money ) : com.cafepos.common.Money
}


class com.cafepos.pricing.NoDiscount {
	{method} +discountOf ( paramMoney1 : com.cafepos.common.Money ) : com.cafepos.common.Money
}


class com.cafepos.pricing.PricingResult {
	{method} +discount () : com.cafepos.common.Money
	{method} +equals ( paramObject1 : Object ) : boolean
	{method} +hashCode () : int
	{method} +subtotal () : com.cafepos.common.Money
	{method} +tax () : com.cafepos.common.Money
	{method} +toString () : String
	{method} +total () : com.cafepos.common.Money
}


class com.cafepos.pricing.PricingService {
	{method} +price ( paramMoney1 : com.cafepos.common.Money ) : com.cafepos.pricing.PricingResult
}


class com.cafepos.pricing.ReceiptPrinter {
	{method} +format ( paramString1 : String , paramint2 : int , paramPricingResult3 : com.cafepos.pricing.PricingResult , paramint4 : int ) : String
}


interface com.cafepos.pricing.TaxPolicy {
	{method}  {abstract} +getPercent () : int
	{method}  {abstract} +taxOn ( paramMoney1 : com.cafepos.common.Money ) : com.cafepos.common.Money
}


class com.cafepos.smells.OrderManagerGod {
	{field} {static} +LAST_DISCOUNT_CODE : String
	{field} {static} +TAX_PERCENT : int
	{method}  {static} +process ( paramString1 : String , paramint2 : int , paramString3 : String , paramString4 : String , paramboolean5 : boolean ) : String
}




com.cafepos.catalog.InMemoryCatalog "1" o-- "0..*"  com.cafepos.catalog.Product : byId
com.cafepos.catalog.InMemoryCatalog ..|>  com.cafepos.catalog.Catalog
com.cafepos.catalog.SimpleProduct *--  com.cafepos.common.Money : basePrice
com.cafepos.catalog.SimpleProduct ..|>  com.cafepos.catalog.Priced
com.cafepos.catalog.SimpleProduct ..|>  com.cafepos.catalog.Product
com.cafepos.checkout.CheckoutService *--  com.cafepos.factory.ProductFactory : factory
com.cafepos.checkout.CheckoutService *--  com.cafepos.pricing.PricingService : pricing
com.cafepos.checkout.CheckoutService *--  com.cafepos.pricing.ReceiptPrinter : printer
com.cafepos.decorator.ExtraShot *--  com.cafepos.common.Money : SURCHARGE
com.cafepos.decorator.ExtraShot --|>  com.cafepos.decorator.ProductDecorator
com.cafepos.decorator.OatMilk *--  com.cafepos.common.Money : SURCHARGE
com.cafepos.decorator.OatMilk --|>  com.cafepos.decorator.ProductDecorator
com.cafepos.decorator.ProductDecorator *--  com.cafepos.catalog.Product : base
com.cafepos.decorator.ProductDecorator ..|>  com.cafepos.catalog.Priced
com.cafepos.decorator.ProductDecorator ..|>  com.cafepos.catalog.Product
com.cafepos.decorator.SizeLarge *--  com.cafepos.common.Money : SURCHARGE
com.cafepos.decorator.SizeLarge --|>  com.cafepos.decorator.ProductDecorator
com.cafepos.decorator.Syrup *--  com.cafepos.common.Money : SURCHARGE
com.cafepos.decorator.Syrup --|>  com.cafepos.decorator.ProductDecorator
com.cafepos.demo.InteractiveCLI *--  com.cafepos.factory.ProductFactory : factory
com.cafepos.demo.InteractiveCLI *--  com.cafepos.pricing.ReceiptPrinter : receiptPrinter
com.cafepos.demo.InteractiveCLI *--  com.cafepos.pricing.TaxPolicy : taxPolicy
com.cafepos.domain.LineItem *--  com.cafepos.catalog.Product : product
com.cafepos.domain.Order "1" o-- "0..*"  com.cafepos.domain.LineItem : items
com.cafepos.domain.Order "1" o-- "0..*"  com.cafepos.observer.OrderObserver : observers
com.cafepos.observer.CustomerNotifier ..|>  com.cafepos.observer.OrderObserver
com.cafepos.observer.DeliveryDesk ..|>  com.cafepos.observer.OrderObserver
com.cafepos.observer.KitchenDisplay ..|>  com.cafepos.observer.OrderObserver
com.cafepos.payment.CardPayment ..|>  com.cafepos.payment.PaymentStrategy
com.cafepos.payment.CashPayment ..|>  com.cafepos.payment.PaymentStrategy
com.cafepos.payment.WalletPayment ..|>  com.cafepos.payment.PaymentStrategy
com.cafepos.pricing.FixedCouponDiscount *--  com.cafepos.common.Money : amount
com.cafepos.pricing.FixedCouponDiscount ..|>  com.cafepos.pricing.DiscountPolicy
com.cafepos.pricing.FixedRateTaxPolicy ..|>  com.cafepos.pricing.TaxPolicy
com.cafepos.pricing.LoyaltyPercentDiscount ..|>  com.cafepos.pricing.DiscountPolicy
com.cafepos.pricing.NoDiscount ..|>  com.cafepos.pricing.DiscountPolicy
com.cafepos.pricing.PricingResult *--  com.cafepos.common.Money : discount
com.cafepos.pricing.PricingResult *--  com.cafepos.common.Money : subtotal
com.cafepos.pricing.PricingResult *--  com.cafepos.common.Money : tax
com.cafepos.pricing.PricingResult *--  com.cafepos.common.Money : total
com.cafepos.pricing.PricingService *--  com.cafepos.pricing.DiscountPolicy : discountPolicy
com.cafepos.pricing.PricingService *--  com.cafepos.pricing.TaxPolicy : taxPolicy


@enduml